import java.util.*;

public class Main {

public static int findPeak(int []arr){
    int low=0;int high=arr.length-1;
while(low<=high){
    int mid=low+(high-low)/2;
    int lval=(mid-1>=0)?arr[mid-1]:-1;
    int rval=(mid+1<arr.length)?arr[mid+1]:-1;
    if(arr[mid]>lval&&arr[mid]>rval){
        //System.out.println(mid);
        System.out.println(mid  + " " +  arr[mid] + " " + lval + " " + rval);
        return mid;
    }
    else{
        if(arr[mid]<rval)low=mid+1;
        else{
            high=mid-1;
        }
    }
}
return -1;
}
public static int binarySearchinc(int []arr,int low,int high,int target){
  
while(low<=high){
    int mid=low+(high-low)/2;
    
    if(arr[mid]==target){
        return mid;
    }
    else if(arr[mid]<target)low=mid+1;
    else{
        high=mid-1;
    }
}
    return -1;
}
public static int binarySearchdec(int []arr,int low,int high,int target){
  
while(low<=high){
    int mid=low+(high-low)/2;
    
    if(arr[mid]==target){
        return mid;
    }
    else if(arr[mid]<target)high=mid-1;
    else{
        low=mid+1;
    }
}
    return -1;
}



    public static int solve(int[] A, int B) {
        int peak=findPeak(A);
        System.out.println(peak);
        if(A[peak]==B)return peak;
        else if(B>A[peak]) return -1;

        int num=binarySearchinc(A,0,peak-1,B);
    
        if(num==-1){
    int res=binarySearchdec(A,peak+1,A.length-1,B);
    if(res==-1)return-1;
    return res;
 
        }
    return num;

    }






public static void main(String[] args) {
    Scanner scn = new Scanner(System.in);
    int n = scn.nextInt();
    int [] arr = new int[n];
    for(int i = 0; i<n; i++){
      arr[i] = scn.nextInt();
    }
    int target = scn.nextInt();
    int ans = solve(arr, target);
    System.out.println(ans);


  }
}
